
#include <TFile.h>
#include <TH1.h>
#include <iostream>
#include <memory>

void Make_truth_NoErr(
    const char* recoFile  = "Unfold_RecoPure.root",
    const char* recoHist  = "hTruthRecoPure",
    const char* ratioFile = "V1_EnergyBands_FAKE_RATIO_2.root",
    const char* ratioHist = "hFakeOverFakePlusMatch",
    const char* outFile   = "Make_truth_NoErr.root")
{
    std::unique_ptr<TFile> fRec(TFile::Open(recoFile,"READ"));
    std::unique_ptr<TFile> fRat(TFile::Open(ratioFile,"READ"));

    auto* hRec = dynamic_cast<TH1*>(fRec->Get(recoHist));
    auto* hR   = dynamic_cast<TH1*>(fRat->Get(ratioHist));
    const int NB = hRec->GetNbinsX();
    auto* hFake = (TH1D*)hRec->Clone("hFake_t");
    hFake->Reset();
    hFake->SetTitle("Fake counts : nRec Ã— ratio");

    auto* hPure = (TH1D*)hRec->Clone("hRecoPure_t");
    hPure->Reset();
    hPure->SetTitle("truth fake subtraction (no error)");
    for(int i=1;i<=NB;++i){
        double nRec = hRec->GetBinContent(i);
        double r    = hR  ->GetBinContent(i);

        double nFake = nRec * r;
        double nPure = nRec - nFake;    

        hFake->SetBinContent(i,nFake);
        hPure->SetBinContent(i,nPure);

        hFake->SetBinError(i,0.0);
        hPure->SetBinError(i,0.0);
    }

    std::unique_ptr<TFile> fout(TFile::Open(outFile,"RECREATE"));
    hFake->Write();
    hPure->Write();
    fout->Close();

    std::cout << "[OK] " << outFile
              << "  (hFake_t, hRecoPure_t)\n";
}
